################# FMUs and OPC UA Servers #################

fmu_files: ["experiments/fmus/WaterTankSystemV2.fmu",
            "experiments/fmus/TankLevel_PI.fmu"]

external_servers: []

################# Experiment #################

experiment:
  experiment_name: Water Level Control # Experiment name for logs
  timestep: 0.1                      # seconds, communication timestep
  timing: "simulation_time"            # simulation_time or real_time 
  stop_time: 60                        # seconds 

  initial_system_state:                # Define timestep and initial conditions
    WaterTankSystem:                   # Model description -> "Model name"
      timestep: 0.1                    # This has to be defined for every fmu
      A: 20                            # FMU parameter
      b: 5                             # FMU parameter
      a: 2                             # FMU parameter
      CV_PumpCtrl_in: 15

    TankLevel_PI:             
      timestep: 0.1
      SP_WaterLevel_in: 10             # Input for the TankLevel_PI - this stays constant during the simulation
      Ki: 0.5                         # FMU parameter
      Kp: 1.5                          # FMU parameter
  
  # The system loop is made according to the block diagram  
  system_loop: 
    - from: TankLevel_PI.CV_PumpCtrl_out
      to:   WaterTankSystem.CV_PumpCtrl_in
    
    - from: WaterTankSystem.PV_WaterLevel_out
      to:   TankLevel_PI.PV_WaterLevel_in

  ################# evaluation & logging #################

  # System evaluation functions, enable: true/false
  evaluation: 
    eval_1:
      condition: "WaterTankSystem.PV_WaterLevel_out > 11.0"
      enabled: true
    eval_2: 
      condition: "TankLevel_PI.CV_PumpCtrl_out < 0.0"
      enabled: true

  # These values are logged in separate log
  logging:
    ["WaterTankSystem.PV_WaterLevel_out", "WaterTankSystem.CV_PumpCtrl_in","TankLevel_PI.CV_PumpCtrl_out", "TankLevel_PI.PV_WaterLevel_in" ]